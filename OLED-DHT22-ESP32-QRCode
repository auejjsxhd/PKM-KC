#define OLEDDISPLAY

#include <qrcodeoled.h>
#include <SSD1306.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <DHT.h>

#define SCREEN_WIDTH 128 // OLED display width,  in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

#define DHT22_PIN 15 // The ESP32 pin GPIO23 connected to DHT22 sensor

// declare an SSD1306 display object connected to I2C
Adafruit_SSD1306 oled(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);
SSD1306  display(0x3c, 21, 22); // Only change
QRcodeOled qrcode (&display);
DHT dht22(DHT22_PIN, DHT22);
String displayString;

// bitmap of arduino-icon image
const unsigned char ArduinoIcon [] PROGMEM = {
// 'REDaM Vertical', 128x64px
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe4, 0x4f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe4, 0x6f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe4, 0x6f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe4, 0x6f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe4, 0x6f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe4, 0x6f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe4, 0x6f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe4, 0x6f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x64, 0x6c, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x24, 0x60, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x04, 0x60, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x04, 0x60, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x04, 0x60, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x0f, 0x04, 0x61, 0xe0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xf4, 0x0d, 0x04, 0x61, 0xf0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xe4, 0x1b, 0x04, 0x61, 0xb0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xc1, 0xfb, 0x04, 0x61, 0xbf, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xc1, 0xfb, 0x04, 0x61, 0x9f, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0xfb, 0x04, 0x61, 0x9f, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0x83, 0x1b, 0x04, 0x61, 0x91, 0x81, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0x03, 0x9b, 0x0c, 0x61, 0x91, 0x81, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0x03, 0xdb, 0x1c, 0x71, 0x9b, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xfe, 0x07, 0xfb, 0x18, 0x39, 0x9f, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xfe, 0x0f, 0x03, 0xfc, 0x7f, 0x80, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xfc, 0x0c, 0x01, 0xd0, 0x1b, 0x00, 0x30, 0x7f, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xfc, 0x0f, 0xf8, 0xf0, 0x1f, 0x3f, 0xe0, 0x7f, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xfc, 0x07, 0xfd, 0xf1, 0x0f, 0x7f, 0xe0, 0x3f, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xf8, 0x01, 0xff, 0x87, 0xc3, 0xff, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xf8, 0x7d, 0xfe, 0x0f, 0xe0, 0x6f, 0x3c, 0x3f, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xf8, 0x7f, 0xe6, 0x0f, 0xe0, 0xef, 0xfc, 0x3f, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xf8, 0x63, 0xc6, 0x0f, 0xe0, 0xe3, 0x84, 0x1f, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xf0, 0x78, 0x1c, 0x0f, 0xe0, 0x78, 0x1c, 0x1f, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xf0, 0x3e, 0x1c, 0x0f, 0xe0, 0x78, 0xfc, 0x1f, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xf0, 0x3f, 0xbe, 0x0f, 0xe0, 0xf9, 0xfc, 0x1f, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xf0, 0x73, 0x3f, 0x0f, 0xe1, 0xf9, 0xdc, 0x1f, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xf0, 0x07, 0x3f, 0x0f, 0xe1, 0xfd, 0xc0, 0x1f, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xf0, 0x0f, 0x3f, 0x0f, 0xe1, 0xfc, 0xf0, 0x0f, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0x7c, 0x1f, 0xf0, 0x7d, 0xff, 0x0f, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0x7c, 0x1f, 0xf0, 0x3d, 0xff, 0x0f, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0x78, 0x3f, 0xf8, 0x3d, 0xfe, 0x0f, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xe0, 0x1b, 0x60, 0x3f, 0xf8, 0x0d, 0xb8, 0x0f, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xe0, 0x19, 0xe0, 0x7f, 0xfc, 0x07, 0xb8, 0x0f, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xe0, 0x18, 0xc0, 0xff, 0xfe, 0x07, 0x38, 0x0f, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x01, 0xff, 0xff, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x0f, 0xff, 0xff, 0xe0, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x3f, 0xff, 0xff, 0xfe, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0xff, 0xff, 0xff, 0xff, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xe1, 0x86, 0x0f, 0xff, 0xff, 0xc3, 0x0f, 0x27, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xed, 0xbe, 0xf7, 0xfc, 0xe7, 0xf7, 0x66, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xed, 0xbe, 0xf7, 0x3c, 0xe7, 0xf7, 0x64, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xe3, 0x86, 0xf2, 0xcc, 0x57, 0xf7, 0x0d, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xeb, 0xbe, 0xf2, 0xed, 0x56, 0x77, 0x74, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xed, 0xbe, 0xf6, 0xeb, 0x3f, 0xf7, 0x76, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xec, 0x86, 0x0e, 0x4b, 0xbb, 0xf7, 0x06, 0x07, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

void setup() {
  Serial.begin(9600);

  // initialize OLED display with address 0x3C for 128x64
  if (!oled.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("SSD1306 allocation failed"));
    while (true);
  }

  delay(2000); // wait for initializing
  oled.setCursor(0, 0);

  oled.setTextSize(4);      // text size
  oled.setTextColor(WHITE); // text color
  oled.setCursor(0, 10);    // position to display

  dht22.begin();              // initialize DHT22 the temperature and humidity sensor

  displayString.reserve(10); // to avoid fragmenting memory when using String
}

void loop() {
  oled.clearDisplay();

  // display bitmap
  oled.drawBitmap(0, 0, ArduinoIcon, 128, 64, WHITE);
  oled.display();
  delay(2000);

  // invert display
  oled.invertDisplay(1);
  delay(2000);
  
  // backtonormal?? display
  oled.invertDisplay(0);
  delay(2000);

  //round edge rectangle loading animation.
  for (int i = 0; i <= 100; i+=5)
    { 
    oled.clearDisplay();
    oled.drawRoundRect(12, 20, 104, 20, 10 , WHITE);
    oled.fillRoundRect(14, 23, i, 14,10, WHITE);
    oled.setTextSize(1);
    oled.setTextColor(WHITE);
    oled.setCursor(20, 50);
    oled.print("Initializing ");
    oled.print(i);
    oled.print("%");
    //for invert the oled.
    // oled.invertoled(true);
    oled.display();
    delay(500);
    };

  oled.clearDisplay();

  oled.setCursor(0, 0);

  oled.setTextSize(2);      // text size
  oled.setTextColor(WHITE); // text color
  oled.setCursor(0, 10);    // position to display

  oled.println("Selamat\nDatang"); // text to display
  oled.display();
  delay(2000);

  oled.clearDisplay();
   for (int i = 0; i <= 100; i+=1)
    { 
    oled.clearDisplay();
    oled.drawRoundRect(12, 20, 104, 20, 10 , WHITE);
    oled.fillRoundRect(14, 23, i, 14,10, WHITE);
    oled.setTextSize(1);
    oled.setTextColor(WHITE);
    oled.setCursor(20, 50);
    oled.print("Processing ");
    oled.print(i);
    oled.print("%");
    //for invert the oled.
    // oled.invertoled(true);
    oled.display();
    delay(100);
    };

    display.init();
    display.clear();
    display.display();


    // enable debug qrcode
    // qrcode.debug();

    // Initialize QRcode display using library
    qrcode.init();
    // create qrcode
    qrcode.create("Hello world."); //Make "Hello world." as a qrcode

  delay(10000);

  // float humi  = dht22.readHumidity();    // read humidity
  // float tempC = dht22.readTemperature(); // read temperature

  // // check if any reads failed
  // if (isnan(humi) || isnan(tempC)) {
  //   displayString = "Failed";
  // } else {
  //   displayString  = String(tempC, 1); // one decimal places
  //   displayString += " C\n";
  //   displayString += String(humi, 1); // one decimal places
  //   displayString += "%";
  // }

  // Serial.println(displayString);    // print the temperature in Celsius to Serial Monitor
  // oledDisplayCenter(displayString); // display temperature and humidity on OLED
  // delay(2000);
}


void oledDisplayCenter(String text) {
  int16_t x1;
  int16_t y1;
  uint16_t width;
  uint16_t height;

  oled.getTextBounds(text, 0, 0, &x1, &y1, &width, &height);

  // display on horizontal and vertical center
  oled.clearDisplay(); // clear display
  oled.setCursor((SCREEN_WIDTH - width) / 2, (SCREEN_HEIGHT - height) / 2);
  oled.println(text); // text to display
  oled.display();
}
